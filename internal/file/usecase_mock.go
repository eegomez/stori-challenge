// Code generated by MockGen. DO NOT EDIT.
// Source: internal/file/usecase.go

// Package file is a generated GoMock package.
package file

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUseCase is a mock of UseCase interface.
type MockUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockUseCaseMockRecorder
}

// MockUseCaseMockRecorder is the mock recorder for MockUseCase.
type MockUseCaseMockRecorder struct {
	mock *MockUseCase
}

// NewMockUseCase creates a new mock instance.
func NewMockUseCase(ctrl *gomock.Controller) *MockUseCase {
	mock := &MockUseCase{ctrl: ctrl}
	mock.recorder = &MockUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUseCase) EXPECT() *MockUseCaseMockRecorder {
	return m.recorder
}

// GetReportTemplateFile mocks base method.
func (m *MockUseCase) GetReportTemplateFile(ctx context.Context) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReportTemplateFile", ctx)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetReportTemplateFile indicates an expected call of GetReportTemplateFile.
func (mr *MockUseCaseMockRecorder) GetReportTemplateFile(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReportTemplateFile", reflect.TypeOf((*MockUseCase)(nil).GetReportTemplateFile), ctx)
}

// GetStoriLogoFile mocks base method.
func (m *MockUseCase) GetStoriLogoFile(ctx context.Context) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStoriLogoFile", ctx)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStoriLogoFile indicates an expected call of GetStoriLogoFile.
func (mr *MockUseCaseMockRecorder) GetStoriLogoFile(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStoriLogoFile", reflect.TypeOf((*MockUseCase)(nil).GetStoriLogoFile), ctx)
}

// GetTransactionsFile mocks base method.
func (m *MockUseCase) GetTransactionsFile(ctx context.Context) ([][]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactionsFile", ctx)
	ret0, _ := ret[0].([][]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransactionsFile indicates an expected call of GetTransactionsFile.
func (mr *MockUseCaseMockRecorder) GetTransactionsFile(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactionsFile", reflect.TypeOf((*MockUseCase)(nil).GetTransactionsFile), ctx)
}
